{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","style","backgroundColor","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRA8BgBA,MA1BhB,YAAyD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC3C,OACA,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAMH,EAAUI,IAAKN,EAAOA,MAAOA,IACxC,sBAAKI,UAAU,cAAf,UACA,oBAAIA,UAAU,eAAeG,MAAO,CAACC,gBAAgB,SAArD,SAAiER,IACjE,oBAAII,UAAU,cAAd,SAA8BL,IAC9B,oBAAIK,UAAU,gBAAd,SAA+BD,EAAOM,KAAI,SAACC,EAAOC,GAAR,OACtC,oBAAgBP,UAAU,gBAA1B,SAA2CM,GAAlCC,QACT,oBAAGP,UAAU,iBAAb,UAAgCH,EAAQW,MAAM,EAAE,KAAhD,gBCsCGC,G,kNA7CbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAGZ,EAAKM,SAAS,CAAEN,SAAQD,WAAY,IAN1B,2C,uDAQZ,WACEQ,KAAKN,c,oBAIP,WACE,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACA,yBAASZ,UAAU,YAAnB,SACGW,EACD,qBAAKX,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAIA,qBAAKA,UAAU,SAAf,SACGY,EAAOP,KAAI,SAAAe,GAAK,OACf,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACV1B,KAAMyB,EAAMzB,KACZI,OAAQqB,EAAMrB,OACdH,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAME,oBANTF,EAAMC,e,GA/BPE,IAAMC,YCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9309f54c.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({ year, title, summary, poster, genres }){\n    return (\n    <div className=\"movie\">\n        <img src={ poster }  alt={title} title={title}  />\n        <div className=\"movie__data\">\n        <h3 className=\"movie__title\" style={{backgroundColor:\"white\"}}>{ title }</h3>\n        <h5 className=\"movie__year\">{ year }</h5>\n        <ul className=\"movie__genres\">{genres.map((genre, index) => (\n            <li key={index} className=\"genres__genre\">{genre}</li>))}</ul>\n            <p className=\"movie__summary\">{ summary.slice(0,140) }...</p>\n        </div>\n    </div>\n    )\n     \n}\n\n Movie.propTypes = {\n    id : PropTypes.number.isRequired,\n    year : PropTypes.number.isRequired,\n    title : PropTypes.string.isRequired,\n    summary : PropTypes.string.isRequired,\n    poster : PropTypes.string.isRequired,\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired\n }\n\n\n export default Movie","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({ movies, isLoading : false});\n  };\n  componentDidMount() {\n    this.getMovies();\n  }\n  // axios 는 fetch 위에 있는 작은 layer이다.\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n    <section className=\"container\">\n      {isLoading ? (\n      <div className=\"loader\">\n        <span className=\"loader__text\">Loading...</span>\n      </div> \n      ) : (\n      \n        <div className=\"movies\">\n          {movies.map(movie => (\n            <Movie\n              key={movie.id}\n              id={movie.id}\n              year={movie.year}\n              genres={movie.genres}\n              title={movie.title}\n              summary={movie.summary}\n              poster={movie.medium_cover_image}\n              />\n          ))}\n        </div>\n        )}\n      </section>\n    )\n}}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//   constructor(props){\n//     super(props)\n//     console.log(\"Hello\");\n//   }\n//   state = {\n//     count: 0\n//   };\n//   add = () => {\n//     this.setState(current => ({count: current.count +1}));\n//   }\n//   minus = () => {\n//      this.setState(current => ({count: current.count -1}));\n\n//   }\n//   componentDidMount(){ // 컴포넌트가 마운트에 등장한 후 실행\n//     console.log(\"component rendered\");\n//   }\n//   componentDidUpdate(){ //컴포넌트가 업데이트 될 때마다 실행\n//     console.log(\"I just updated\");\n\n//   }\n//   componentWillUnmount(){ // 컴포넌트가 마운트에서 사라진 후 실행(페이지이동)\n//     console.log(\"Good bye Cruel world\");// 함수는 확싫히 동작하지만 콘솔로그는 동작 확인 불가\n//   }\n//   render(){\n//     console.log(\"I'm randering\");\n//     return ( <div>\n\n//     <h1>The number is {this.state.count}</h1>\n//     <button onClick={this.add}>Add</button>\n//     <button onClick={this.minus}>Minus</button>\n//     </div>\n//     )\n//   }\n// }\n\n// export default App;\n\n// // 매 순간 내가 setState를 호출할 때마다 react는 새로운 state와 함께 render function을 호출한다.\n\n//  // mounting = 태어나는 것\n//  // Updating = 업데이트\n//  // Unmounting = 컴포넌트가 죽는 것(페이지 바꿀 때 등)\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}